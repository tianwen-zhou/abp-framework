<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yi.Framework.SqlSugarCore</name>
    </assembly>
    <members>
        <member name="M:Yi.Framework.SqlSugarCore.Repositories.SqlSugarObjectRepository`1.GetDbContextAsync">
            <summary>
            获取DB
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.Repositories.SqlSugarRepository`1.GetDbContextAsync">
            <summary>
            获取DB
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.Repositories.SqlSugarRepository`1.GetDbSimpleClientAsync">
            <summary>
            获取简单Db
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.SqlSugarCoreExtensions.AddYiDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
            新增db对象，可支持多个
            </summary>
            <param name="service"></param>
            <param name="serviceLifetime"></param>
            <typeparam name="TDbContext"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.SqlSugarCoreExtensions.AddYiDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Yi.Framework.SqlSugarCore.Abstractions.DbConnOptions})">
            <summary>
            新增db对象，可支持多个
            </summary>
            <param name="service"></param>
            <param name="options"></param>
            <typeparam name="TDbContext"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Yi.Framework.SqlSugarCore.SqlSugarDbContextFactory.SqlSugarClient">
            <summary>
            SqlSugar 客户端
            </summary>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.SqlSugarDbContextFactory.SetDbAop(SqlSugar.ISqlSugarClient)">
            <summary>
            构建Aop-sqlsugaraop在多租户模式中，需单独设置
            </summary>
            <param name="sqlSugarClient"></param>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.SqlSugarDbContextFactory.BuildConnectionConfig(System.Action{SqlSugar.ConnectionConfig})">
            <summary>
            构建连接配置
            </summary>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.SqlSugarDbContextFactory.GetCurrentConnectionString">
            <summary>
            db切换多库支持
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.NonPublicPropertiesResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            重写获取属性，存在get set方法就可以写入
            </summary>
            <param name="member"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="F:Yi.Framework.SqlSugarCore.SqlSugarNonPublicSerializer._serializeService">
            <summary>
            默认的序列化服务
            </summary>
        </member>
        <member name="M:Yi.Framework.SqlSugarCore.SqlSugarNonPublicSerializer.DeserializeObject``1(System.String)">
            <summary>
            重写对象反序列化支持NoPublic访问器
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
    </members>
</doc>
